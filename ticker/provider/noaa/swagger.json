{
  "components": {
    "headers": {
      "CorrelationId": {
        "description": "A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
        "schema": {
          "type": "string"
        }
      },
      "RequestId": {
        "description": "A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
        "schema": {
          "type": "string"
        }
      },
      "ServerId": {
        "description": "The identifier of the server that generated the response, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
        "schema": {
          "type": "string"
        }
      }
    },
    "parameters": {
      "AlertArea": {
        "description": "State/territory code or marine area code\nThis parameter is incompatible with the following parameters: point, region, region_type, zone\n",
        "explode": false,
        "in": "query",
        "name": "area",
        "schema": {
          "items": {
            "$ref": "#/components/schemas/AreaCode"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertCertainty": {
        "description": "Certainty (observed, likely, possible, unlikely, unknown)",
        "explode": false,
        "in": "query",
        "name": "certainty",
        "schema": {
          "items": {
            "$ref": "#/components/schemas/AlertCertaintyEnum"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertCode": {
        "description": "Event code",
        "explode": false,
        "in": "query",
        "name": "code",
        "schema": {
          "items": {
            "pattern": "^\\w{3}$",
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertEventName": {
        "description": "Event name",
        "explode": false,
        "in": "query",
        "name": "event",
        "schema": {
          "items": {
            "pattern": "^[A-Za-z0-9 ]+$",
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertMessageType": {
        "description": "Message type (alert, update, cancel)",
        "explode": false,
        "in": "query",
        "name": "message_type",
        "schema": {
          "items": {
            "enum": [
              "alert",
              "update",
              "cancel"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertPoint": {
        "description": "Point (latitude,longitude)\nThis parameter is incompatible with the following parameters: area, region, region_type, zone\n",
        "in": "query",
        "name": "point",
        "schema": {
          "$ref": "#/components/schemas/PointString"
        }
      },
      "AlertRegion": {
        "description": "Marine region code\nThis parameter is incompatible with the following parameters: area, point, region_type, zone\n",
        "explode": false,
        "in": "query",
        "name": "region",
        "schema": {
          "items": {
            "$ref": "#/components/schemas/MarineRegionCode"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertRegionType": {
        "description": "Region type (land or marine)\nThis parameter is incompatible with the following parameters: area, point, region, zone\n",
        "in": "query",
        "name": "region_type",
        "schema": {
          "enum": [
            "land",
            "marine"
          ],
          "type": "string"
        }
      },
      "AlertSeverity": {
        "description": "Severity (extreme, severe, moderate, minor, unknown)",
        "explode": false,
        "in": "query",
        "name": "severity",
        "schema": {
          "items": {
            "$ref": "#/components/schemas/AlertSeverityEnum"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertStatus": {
        "description": "Status (actual, exercise, system, test, draft)",
        "explode": false,
        "in": "query",
        "name": "status",
        "schema": {
          "items": {
            "enum": [
              "actual",
              "exercise",
              "system",
              "test",
              "draft"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertUrgency": {
        "description": "Urgency (immediate, expected, future, past, unknown)",
        "explode": false,
        "in": "query",
        "name": "urgency",
        "schema": {
          "items": {
            "$ref": "#/components/schemas/AlertUrgencyEnum"
          },
          "type": "array"
        },
        "style": "form"
      },
      "AlertZone": {
        "description": "Zone ID (forecast or county)\nThis parameter is incompatible with the following parameters: area, point, region, region_type\n",
        "explode": false,
        "in": "query",
        "name": "zone",
        "schema": {
          "items": {
            "$ref": "#/components/schemas/NWSZoneID"
          },
          "type": "array"
        },
        "style": "form"
      },
      "ATSUIdentifier": {
        "description": "ATSU identifier",
        "in": "path",
        "name": "atsu",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ATSUIdentifier"
        }
      },
      "Date": {
        "description": "Date (YYYY-MM-DD format)",
        "in": "path",
        "name": "date",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Date"
        }
      },
      "GridpointForecastFeatureFlags": {
        "description": "Enable future and experimental features (see documentation for more info):\n* forecast_temperature_qv: Represent temperature as QuantitativeValue\n* forecast_wind_speed_qv: Represent wind speed as QuantitativeValue\n",
        "explode": false,
        "in": "header",
        "name": "Feature-Flags",
        "required": false,
        "schema": {
          "items": {
            "enum": [
              "forecast_temperature_qv",
              "forecast_wind_speed_qv"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "style": "simple"
      },
      "GridpointForecastUnits": {
        "description": "Use US customary or SI (metric) units in textual output",
        "in": "query",
        "name": "units",
        "schema": {
          "$ref": "#/components/schemas/GridpointForecastUnits"
        }
      },
      "GridpointWFO": {
        "description": "Forecast office ID",
        "in": "path",
        "name": "wfo",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NWSForecastOfficeId"
        }
      },
      "GridpointX": {
        "description": "Forecast grid X coordinate",
        "in": "path",
        "name": "x",
        "required": true,
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "GridpointY": {
        "description": "Forecast grid Y coordinate",
        "in": "path",
        "name": "y",
        "required": true,
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "Latitude": {
        "description": "Latitude",
        "in": "path",
        "name": "latitude",
        "required": true,
        "schema": {
          "maximum": 90,
          "minimum": -90,
          "multipleOf": 0.0001,
          "type": "number"
        }
      },
      "Limit": {
        "description": "Limit",
        "in": "query",
        "name": "limit",
        "schema": {
          "default": 500,
          "maximum": 500,
          "minimum": 1,
          "type": "integer"
        }
      },
      "Longitude": {
        "description": "Longitude",
        "in": "path",
        "name": "longitude",
        "required": true,
        "schema": {
          "maximum": 180,
          "minimum": -180,
          "multipleOf": 0.0001,
          "type": "number"
        }
      },
      "NWSCenterWeatherServiceUnitId": {
        "description": "NWS CWSU ID",
        "in": "path",
        "name": "cwsuId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NWSCenterWeatherServiceUnitId"
        }
      },
      "NWSOfficeId": {
        "description": "NWS office ID",
        "in": "path",
        "name": "officeId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NWSOfficeId"
        }
      },
      "NWSZoneId": {
        "description": "NWS public zone/county identifier",
        "in": "path",
        "name": "zoneId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NWSZoneID"
        }
      },
      "ObservationsStationFeatureFlags": {
        "description": "Enable future and experimental features (see documentation for more info):\n* obs_station_provider: Include the data provider in the metadata about observation stations\n",
        "explode": false,
        "in": "header",
        "name": "Feature-Flags",
        "required": false,
        "schema": {
          "items": {
            "enum": [
              "obs_station_provider"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "style": "simple"
      },
      "ObservationStationId": {
        "description": "Observation station ID",
        "in": "path",
        "name": "stationId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "PaginationCursor": {
        "description": "Pagination cursor",
        "in": "query",
        "name": "cursor",
        "schema": {
          "type": "string"
        }
      },
      "QueryDate": {
        "description": "Date (YYYY-MM-DD format)",
        "in": "query",
        "name": "date",
        "schema": {
          "$ref": "#/components/schemas/Date"
        }
      },
      "QueryEndTime": {
        "description": "End time",
        "in": "query",
        "name": "end",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "QueryStartTime": {
        "description": "Start time",
        "in": "query",
        "name": "start",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "SigmetSequenceNumber": {
        "description": "SIGMET sequence number",
        "in": "path",
        "name": "sequence",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SigmetSequenceNumber"
        }
      },
      "Time": {
        "description": "Time (HHMM format). This time is always specified in UTC (Zulu) time.",
        "in": "path",
        "name": "time",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Time"
        }
      }
    },
    "responses": {
      "AlertCollection": {
        "content": {
          "application/atom+xml": {
            "schema": {
              "$ref": "#/components/schemas/AlertAtomFeed"
            }
          },
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/AlertCollectionGeoJson"
            }
          },
          "application/ld+json": {
            "schema": {
              "$ref": "#/components/schemas/AlertCollectionJsonLd"
            }
          }
        },
        "description": "A collection of alerts.",
        "headers": {
          "X-Correlation-Id": {
            "$ref": "#/components/headers/CorrelationId"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/RequestId"
          },
          "X-Server-Id": {
            "$ref": "#/components/headers/ServerId"
          }
        },
        "x-url-content-negotiation-extensions": {
          "atom": "application/atom+xml",
          "json": "application/geo+json"
        }
      },
      "Error": {
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetail"
            }
          }
        },
        "description": "An error response.",
        "headers": {
          "X-Correlation-Id": {
            "$ref": "#/components/headers/CorrelationId"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/RequestId"
          },
          "X-Server-Id": {
            "$ref": "#/components/headers/ServerId"
          }
        }
      },
      "Gridpoint12hForecast": {
        "content": {
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/Gridpoint12hForecastGeoJson"
            }
          },
          "application/ld+json": {
            "schema": {
              "$ref": "#/components/schemas/Gridpoint12hForecastJsonLd"
            }
          },
          "application/vnd.noaa.dwml+xml": {
            "schema": {}
          }
        },
        "description": "A forecast for a gridpoint.",
        "headers": {
          "X-Correlation-Id": {
            "$ref": "#/components/headers/CorrelationId"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/RequestId"
          },
          "X-Server-Id": {
            "$ref": "#/components/headers/ServerId"
          }
        }
      },
      "GridpointHourlyForecast": {
        "content": {
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/GridpointHourlyForecastGeoJson"
            }
          },
          "application/ld+json": {
            "schema": {
              "$ref": "#/components/schemas/GridpointHourlyForecastJsonLd"
            }
          },
          "application/vnd.noaa.dwml+xml": {
            "schema": {}
          }
        },
        "description": "A forecast for a gridpoint.",
        "headers": {
          "X-Correlation-Id": {
            "$ref": "#/components/headers/CorrelationId"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/RequestId"
          },
          "X-Server-Id": {
            "$ref": "#/components/headers/ServerId"
          }
        }
      },
      "Observation": {
        "content": {
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/ObservationGeoJson"
            }
          },
          "application/ld+json": {
            "schema": {
              "$ref": "#/components/schemas/ObservationJsonLd"
            }
          },
          "application/vnd.noaa.obs+xml": {
            "schema": {}
          },
          "application/vnd.noaa.uswx+xml": {
            "schema": {}
          }
        },
        "description": "An observation record.",
        "headers": {
          "X-Correlation-Id": {
            "$ref": "#/components/headers/CorrelationId"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/RequestId"
          },
          "X-Server-Id": {
            "$ref": "#/components/headers/ServerId"
          }
        }
      },
      "ObservationCollection": {
        "content": {
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/ObservationCollectionGeoJson"
            }
          },
          "application/ld+json": {
            "schema": {
              "$ref": "#/components/schemas/ObservationCollectionJsonLd"
            }
          }
        },
        "description": "A collection of observation records.",
        "headers": {
          "X-Correlation-Id": {
            "$ref": "#/components/headers/CorrelationId"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/RequestId"
          },
          "X-Server-Id": {
            "$ref": "#/components/headers/ServerId"
          }
        }
      },
      "ObservationStationCollection": {
        "content": {
          "application/geo+json": {
            "schema": {
              "$ref": "#/components/schemas/ObservationStationCollectionGeoJson"
            }
          },
          "application/ld+json": {
            "schema": {
              "$ref": "#/components/schemas/ObservationStationCollectionJsonLd"
            }
          }
        },
        "description": "A collection of observation stations.",
        "headers": {
          "X-Correlation-Id": {
            "$ref": "#/components/headers/CorrelationId"
          },
          "X-Request-Id": {
            "$ref": "#/components/headers/RequestId"
          },
          "X-Server-Id": {
            "$ref": "#/components/headers/ServerId"
          }
        }
      }
    },
    "schemas": {
      "Alert": {
        "description": "An object representing a public alert message.\nUnless otherwise noted, the fields in this object correspond to the National Weather Service CAP v1.2 specification, which extends the OASIS Common Alerting Protocol (CAP) v1.2 specification and USA Integrated Public Alert and Warning System (IPAWS) Profile v1.0. Refer to this documentation for more complete information.\nhttp://docs.oasis-open.org/emergency/cap/v1.2/CAP-v1.2-os.html http://docs.oasis-open.org/emergency/cap/v1.2/ipaws-profile/v1.0/cs01/cap-v1.2-ipaws-profile-cs01.html https://vlab.noaa.gov/web/nws-common-alerting-protocol/cap-documentation\n",
        "properties": {
          "affectedZones": {
            "description": "An array of API links for zones affected by the alert. This is an API-specific extension field and is not part of the CAP specification.\n",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "areaDesc": {
            "description": "A textual description of the area affected by the alert.",
            "type": "string"
          },
          "category": {
            "description": "The code denoting the category of the subject event of the alert message.",
            "enum": [
              "Met",
              "Geo",
              "Safety",
              "Security",
              "Rescue",
              "Fire",
              "Health",
              "Env",
              "Transport",
              "Infra",
              "CBRNE",
              "Other"
            ],
            "type": "string"
          },
          "certainty": {
            "$ref": "#/components/schemas/AlertCertaintyEnum"
          },
          "code": {
            "description": "The code denoting the special handling of the alert message.",
            "type": "string"
          },
          "description": {
            "description": "The text describing the subject event of the alert message.",
            "type": "string"
          },
          "effective": {
            "description": "The effective time of the information of the alert message.",
            "format": "date-time",
            "type": "string"
          },
          "ends": {
            "description": "The expected end time of the subject event of the alert message.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "event": {
            "description": "The text denoting the type of the subject event of the alert message.",
            "type": "string"
          },
          "eventCode": {
            "additionalProperties": {
              "items": {},
              "type": "array"
            },
            "description": "System-specific code identifiying the event type of the alert message The keys in this object correspond to eventCode definitions in the NWS CAP specification.\n",
            "type": "object"
          },
          "expires": {
            "description": "The expiry time of the information of the alert message.",
            "format": "date-time",
            "type": "string"
          },
          "geocode": {
            "description": "Lists of codes for NWS public zones and counties affected by the alert.",
            "properties": {
              "SAME": {
                "description": "A list of SAME (Specific Area Message Encoding) codes for affected counties.",
                "items": {
                  "pattern": "^\\d{6}$",
                  "type": "string"
                },
                "type": "array"
              },
              "UGC": {
                "description": "A list of NWS public zone or county identifiers.",
                "items": {
                  "$ref": "#/components/schemas/NWSZoneID"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "headline": {
            "description": "The text headline of the alert message.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/AlertId"
          },
          "instruction": {
            "description": "The text describing the recommended action to be taken by recipients of the alert message.\n",
            "nullable": true,
            "type": "string"
          },
          "language": {
            "description": "The code denoting the language of the info sub-element of the alert message.",
            "type": "string"
          },
          "messageType": {
            "$ref": "#/components/schemas/AlertMessageTypeEnum"
          },
          "onset": {
            "description": "The expected time of the beginning of the subject event of the alert message.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "items": {},
              "type": "array"
            },
            "description": "System-specific additional parameters associated with the alert message.\nThe keys in this object correspond to parameter definitions in the NWS CAP specification.\n",
            "type": "object"
          },
          "references": {
            "description": "A list of prior alerts that this alert updates or replaces.",
            "items": {
              "properties": {
                "@id": {
                  "description": "An API link to the prior alert.",
                  "format": "uri",
                  "type": "string"
                },
                "identifier": {
                  "$ref": "#/components/schemas/AlertId"
                },
                "sender": {
                  "description": "The sender of the prior alert.",
                  "type": "string"
                },
                "sent": {
                  "description": "The time the prior alert was sent.",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "response": {
            "description": "The code denoting the type of action recommended for the target audience.\nThis corresponds to responseType in the CAP specification.\n",
            "enum": [
              "Shelter",
              "Evacuate",
              "Prepare",
              "Execute",
              "Avoid",
              "Monitor",
              "Assess",
              "AllClear",
              "None"
            ],
            "type": "string"
          },
          "scope": {
            "description": "The code denoting the intended distribution of the alert message.",
            "enum": [
              "Public",
              "Restricted",
              "Private"
            ],
            "type": "string"
          },
          "sender": {
            "description": "Email address of the NWS webmaster.",
            "type": "string"
          },
          "senderName": {
            "description": "The text naming the originator of the alert message.",
            "type": "string"
          },
          "sent": {
            "description": "The time of the origination of the alert message.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverityEnum"
          },
          "status": {
            "$ref": "#/components/schemas/AlertStatusEnum"
          },
          "urgency": {
            "$ref": "#/components/schemas/AlertUrgencyEnum"
          },
          "web": {
            "description": "The identifier of the hyperlink associating additional information within the alert message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertAtomEntry": {
        "description": "An alert entry in an Atom feed",
        "properties": {
          "areaDesc": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "author": {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "category": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "certainty": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "effective": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "event": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "expires": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "geocode": {
            "items": {
              "$ref": "#/components/schemas/AlertXMLParameter"
            },
            "type": "array",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "msgType": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "parameter": {
            "items": {
              "$ref": "#/components/schemas/AlertXMLParameter"
            },
            "type": "array",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "polygon": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "published": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "sent": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "severity": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "status": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          },
          "summary": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "updated": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "urgency": {
            "type": "string",
            "xml": {
              "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "entry",
          "namespace": "http://www.w3.org/2005/Atom"
        }
      },
      "AlertAtomFeed": {
        "description": "An alert feed in Atom format",
        "properties": {
          "author": {
            "properties": {
              "name": {
                "type": "string",
                "xml": {
                  "namespace": "http://www.w3.org/2005/Atom"
                }
              }
            },
            "type": "object",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "entry": {
            "items": {
              "$ref": "#/components/schemas/AlertAtomEntry"
            },
            "type": "array",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "generator": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "title": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          },
          "updated": {
            "type": "string",
            "xml": {
              "namespace": "http://www.w3.org/2005/Atom"
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "feed",
          "namespace": "http://www.w3.org/2005/Atom"
        }
      },
      "AlertCap": {
        "type": "object"
      },
      "AlertCertaintyEnum": {
        "enum": [
          "Observed",
          "Likely",
          "Possible",
          "Unlikely",
          "Unknown"
        ],
        "type": "string"
      },
      "AlertCollection": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          },
          "title": {
            "description": "A title describing the alert collection",
            "type": "string"
          },
          "updated": {
            "description": "The last time a change occurred to this collection",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertCollectionGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeatureCollection"
          },
          {
            "properties": {
              "features": {
                "items": {
                  "properties": {
                    "properties": {
                      "$ref": "#/components/schemas/Alert"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/AlertCollection"
          }
        ]
      },
      "AlertCollectionJsonLd": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertCollection"
          },
          {
            "properties": {
              "@context": {
                "$ref": "#/components/schemas/JsonLdContext"
              },
              "@graph": {
                "items": {
                  "$ref": "#/components/schemas/Alert"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "AlertGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Alert"
              }
            },
            "type": "object"
          }
        ]
      },
      "AlertId": {
        "description": "The identifier of the alert message.",
        "type": "string"
      },
      "AlertJsonLd": {
        "properties": {
          "@graph": {
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AlertMessageTypeEnum": {
        "enum": [
          "Alert",
          "Update",
          "Cancel",
          "Ack",
          "Error"
        ],
        "type": "string"
      },
      "AlertSeverityEnum": {
        "enum": [
          "Extreme",
          "Severe",
          "Moderate",
          "Minor",
          "Unknown"
        ],
        "type": "string"
      },
      "AlertStatusEnum": {
        "enum": [
          "Actual",
          "Exercise",
          "System",
          "Test",
          "Draft"
        ],
        "type": "string"
      },
      "AlertUrgencyEnum": {
        "enum": [
          "Immediate",
          "Expected",
          "Future",
          "Past",
          "Unknown"
        ],
        "type": "string"
      },
      "AlertXMLParameter": {
        "properties": {
          "value": {
            "type": "string"
          },
          "valueName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AreaCode": {
        "description": "State/territory codes and marine area codes",
        "oneOf": [
          {
            "$ref": "#/components/schemas/StateTerritoryCode"
          },
          {
            "$ref": "#/components/schemas/MarineAreaCode"
          }
        ]
      },
      "ATSUIdentifier": {
        "description": "ATSU Identifier",
        "pattern": "^[A-Z]{3,4}$",
        "type": "string"
      },
      "BinaryFile": {
        "format": "binary",
        "type": "string"
      },
      "CenterWeatherAdvisory": {
        "additionalProperties": false,
        "properties": {
          "cwsu": {
            "$ref": "#/components/schemas/NWSCenterWeatherServiceUnitId"
          },
          "end": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "issueTime": {
            "format": "date-time",
            "type": "string"
          },
          "observedProperty": {
            "type": "string"
          },
          "sequence": {
            "minimum": 101,
            "type": "integer"
          },
          "start": {
            "format": "date-time",
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CenterWeatherAdvisoryCollectionGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeatureCollection"
          },
          {
            "properties": {
              "features": {
                "items": {
                  "properties": {
                    "properties": {
                      "$ref": "#/components/schemas/CenterWeatherAdvisory"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "CenterWeatherAdvisoryGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/CenterWeatherAdvisory"
              }
            },
            "type": "object"
          }
        ]
      },
      "CenterWeatherServiceUnitJsonLd": {
        "$ref": "#/components/schemas/Office"
      },
      "Date": {
        "description": "Date (in YYYY-MM-DD format).",
        "format": "date",
        "type": "string"
      },
      "GeoJsonBoundingBox": {
        "description": "A GeoJSON bounding box. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
        "items": {
          "type": "number"
        },
        "minItems": 4,
        "type": "array"
      },
      "GeoJsonCoordinate": {
        "description": "A GeoJSON coordinate. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
        "items": {
          "type": "number"
        },
        "minItems": 2,
        "type": "array"
      },
      "GeoJsonFeature": {
        "additionalProperties": false,
        "description": "A GeoJSON feature. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeoJsonGeometry"
          },
          "id": {
            "format": "uri",
            "type": "string"
          },
          "properties": {
            "type": "object"
          },
          "type": {
            "enum": [
              "Feature"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "geometry",
          "properties"
        ],
        "type": "object"
      },
      "GeoJsonFeatureCollection": {
        "description": "A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "features": {
            "items": {
              "$ref": "#/components/schemas/GeoJsonFeature"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "FeatureCollection"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "features"
        ],
        "type": "object"
      },
      "GeoJsonGeometry": {
        "description": "A GeoJSON geometry object. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
        "nullable": true,
        "oneOf": [
          {
            "properties": {
              "bbox": {
                "$ref": "#/components/schemas/GeoJsonBoundingBox"
              },
              "coordinates": {
                "$ref": "#/components/schemas/GeoJsonCoordinate"
              },
              "type": {
                "enum": [
                  "Point"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "coordinates"
            ],
            "title": "GeoJSON Point",
            "type": "object"
          },
          {
            "properties": {
              "bbox": {
                "$ref": "#/components/schemas/GeoJsonBoundingBox"
              },
              "coordinates": {
                "$ref": "#/components/schemas/GeoJsonLineString"
              },
              "type": {
                "enum": [
                  "LineString"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "coordinates"
            ],
            "title": "GeoJSON LineString",
            "type": "object"
          },
          {
            "properties": {
              "bbox": {
                "$ref": "#/components/schemas/GeoJsonBoundingBox"
              },
              "coordinates": {
                "$ref": "#/components/schemas/GeoJsonPolygon"
              },
              "type": {
                "enum": [
                  "Polygon"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "coordinates"
            ],
            "title": "GeoJSON Polygon",
            "type": "object"
          },
          {
            "properties": {
              "bbox": {
                "$ref": "#/components/schemas/GeoJsonBoundingBox"
              },
              "coordinates": {
                "items": {
                  "$ref": "#/components/schemas/GeoJsonCoordinate"
                },
                "type": "array"
              },
              "type": {
                "enum": [
                  "MultiPoint"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "coordinates"
            ],
            "title": "GeoJSON MultiPoint",
            "type": "object"
          },
          {
            "properties": {
              "bbox": {
                "$ref": "#/components/schemas/GeoJsonBoundingBox"
              },
              "coordinates": {
                "items": {
                  "$ref": "#/components/schemas/GeoJsonLineString"
                },
                "type": "array"
              },
              "type": {
                "enum": [
                  "MultiLineString"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "coordinates"
            ],
            "title": "GeoJSON MultiLineString",
            "type": "object"
          },
          {
            "properties": {
              "bbox": {
                "$ref": "#/components/schemas/GeoJsonBoundingBox"
              },
              "coordinates": {
                "items": {
                  "$ref": "#/components/schemas/GeoJsonPolygon"
                },
                "type": "array"
              },
              "type": {
                "enum": [
                  "MultiPolygon"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "coordinates"
            ],
            "title": "GeoJSON MultiPolygon",
            "type": "object"
          }
        ]
      },
      "GeoJsonLineString": {
        "description": "A GeoJSON line string. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
        "items": {
          "$ref": "#/components/schemas/GeoJsonCoordinate"
        },
        "minItems": 2,
        "type": "array"
      },
      "GeoJsonPolygon": {
        "description": "A GeoJSON polygon. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
        "items": {
          "items": {
            "$ref": "#/components/schemas/GeoJsonCoordinate"
          },
          "minItems": 4,
          "type": "array"
        },
        "type": "array"
      },
      "GeometryString": {
        "description": "A geometry represented in Well-Known Text (WKT) format.",
        "format": "wkt",
        "nullable": true,
        "type": "string"
      },
      "Gridpoint": {
        "additionalProperties": {
          "$ref": "#/components/schemas/GridpointQuantitativeValueLayer"
        },
        "description": "Raw forecast data for a 2.5km grid square.\nThis is a list of all potential data layers that may appear. Some layers may not be present in all areas.\n* temperature\n* dewpoint\n* maxTemperature\n* minTemperature\n* relativeHumidity\n* apparentTemperature\n* heatIndex\n* windChill\n* wetBulbGlobeTemperature\n* skyCover\n* windDirection\n* windSpeed\n* windGust\n* weather\n* hazards: Watch and advisory products in effect\n* probabilityOfPrecipitation\n* quantitativePrecipitation\n* iceAccumulation\n* snowfallAmount\n* snowLevel\n* ceilingHeight\n* visibility\n* transportWindSpeed\n* transportWindDirection\n* mixingHeight\n* hainesIndex\n* lightningActivityLevel\n* twentyFootWindSpeed\n* twentyFootWindDirection\n* waveHeight\n* wavePeriod\n* waveDirection\n* primarySwellHeight\n* primarySwellDirection\n* secondarySwellHeight\n* secondarySwellDirection\n* wavePeriod2\n* windWaveHeight\n* dispersionIndex\n* pressure: Barometric pressure\n* probabilityOfTropicalStormWinds\n* probabilityOfHurricaneWinds\n* potentialOf15mphWinds\n* potentialOf25mphWinds\n* potentialOf35mphWinds\n* potentialOf45mphWinds\n* potentialOf20mphWindGusts\n* potentialOf30mphWindGusts\n* potentialOf40mphWindGusts\n* potentialOf50mphWindGusts\n* potentialOf60mphWindGusts\n* grasslandFireDangerIndex\n* probabilityOfThunder\n* davisStabilityIndex\n* atmosphericDispersionIndex\n* lowVisibilityOccurrenceRiskIndex\n* stability\n* redFlagThreatIndex\n",
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@id": {
            "format": "uri",
            "type": "string"
          },
          "@type": {
            "enum": [
              "wx:Gridpoint"
            ],
            "type": "string"
          },
          "elevation": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "forecastOffice": {
            "format": "uri",
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "gridId": {
            "type": "string"
          },
          "gridX": {
            "minimum": 0,
            "type": "integer"
          },
          "gridY": {
            "minimum": 0,
            "type": "integer"
          },
          "hazards": {
            "properties": {
              "values": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "validTime": {
                      "$ref": "#/components/schemas/ISO8601Interval"
                    },
                    "value": {
                      "items": {
                        "description": "A value object representing an expected hazard.",
                        "properties": {
                          "event_number": {
                            "description": "Event number. If this hazard refers to a national or regional center product (such as a Storm Prediction Center convective watch), this value will be the sequence number of that product.\n",
                            "nullable": true,
                            "type": "integer"
                          },
                          "phenomenon": {
                            "description": "Hazard code. This value will correspond to a P-VTEC phenomenon code as defined in NWS Directive 10-1703.\n",
                            "pattern": "^\\w{2}$",
                            "type": "string"
                          },
                          "significance": {
                            "description": "Significance code. This value will correspond to a P-VTEC significance code as defined in NWS Directive 10-1703.\nThis will most frequently be \"A\" for a watch or \"Y\" for an advisory.\n",
                            "pattern": "^\\w$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "phenomenon",
                          "significance",
                          "event_number"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "validTime",
                    "value"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "values"
            ],
            "type": "object"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "validTimes": {
            "$ref": "#/components/schemas/ISO8601Interval"
          },
          "weather": {
            "properties": {
              "values": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "validTime": {
                      "$ref": "#/components/schemas/ISO8601Interval"
                    },
                    "value": {
                      "items": {
                        "additionalProperties": false,
                        "description": "A value object representing expected weather phenomena.",
                        "properties": {
                          "attributes": {
                            "items": {
                              "enum": [
                                "damaging_wind",
                                "dry_thunderstorms",
                                "flooding",
                                "gusty_wind",
                                "heavy_rain",
                                "large_hail",
                                "small_hail",
                                "tornadoes"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "coverage": {
                            "enum": [
                              "areas",
                              "brief",
                              "chance",
                              "definite",
                              "few",
                              "frequent",
                              "intermittent",
                              "isolated",
                              "likely",
                              "numerous",
                              "occasional",
                              "patchy",
                              "periods",
                              "scattered",
                              "slight_chance",
                              "widespread"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "intensity": {
                            "enum": [
                              "very_light",
                              "light",
                              "moderate",
                              "heavy"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "visibility": {
                            "$ref": "#/components/schemas/QuantitativeValue"
                          },
                          "weather": {
                            "enum": [
                              "blowing_dust",
                              "blowing_sand",
                              "blowing_snow",
                              "drizzle",
                              "fog",
                              "freezing_fog",
                              "freezing_drizzle",
                              "freezing_rain",
                              "freezing_spray",
                              "frost",
                              "hail",
                              "haze",
                              "ice_crystals",
                              "ice_fog",
                              "rain",
                              "rain_showers",
                              "sleet",
                              "smoke",
                              "snow",
                              "snow_showers",
                              "thunderstorms",
                              "volcanic_ash",
                              "water_spouts"
                            ],
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "coverage",
                          "weather",
                          "intensity",
                          "visibility",
                          "attributes"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "validTime",
                    "value"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "values"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "Gridpoint12hForecast": {
        "additionalProperties": false,
        "description": "A multi-day forecast for a 2.5km grid square.",
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "elevation": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "forecastGenerator": {
            "description": "The internal generator class used to create the forecast text (used for NWS debugging).",
            "type": "string"
          },
          "generatedAt": {
            "description": "The time this forecast data was generated.",
            "format": "date-time",
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "periods": {
            "description": "An array of forecast periods.",
            "items": {
              "$ref": "#/components/schemas/Gridpoint12hForecastPeriod"
            },
            "type": "array"
          },
          "units": {
            "$ref": "#/components/schemas/GridpointForecastUnits"
          },
          "updateTime": {
            "description": "The last update time of the data this forecast was generated from.",
            "format": "date-time",
            "type": "string"
          },
          "validTimes": {
            "$ref": "#/components/schemas/ISO8601Interval"
          }
        },
        "type": "object"
      },
      "Gridpoint12hForecastGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Gridpoint12hForecast"
              }
            },
            "type": "object"
          }
        ]
      },
      "Gridpoint12hForecastJsonLd": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Gridpoint12hForecast"
          },
          {
            "properties": {
              "@context": {
                "$ref": "#/components/schemas/JsonLdContext"
              },
              "geometry": {
                "$ref": "#/components/schemas/GeometryString"
              }
            },
            "required": [
              "@context",
              "geometry"
            ],
            "type": "object"
          }
        ]
      },
      "Gridpoint12hForecastPeriod": {
        "additionalProperties": false,
        "description": "An object containing forecast information for a specific time period (generally 12-hour or 1-hour).\n",
        "properties": {
          "detailedForecast": {
            "description": "A detailed textual forecast for the period.",
            "type": "string"
          },
          "endTime": {
            "description": "The ending time that this forecast period is valid for.",
            "format": "date-time",
            "type": "string"
          },
          "icon": {
            "deprecated": true,
            "description": "A link to an icon representing the forecast summary.",
            "format": "uri",
            "type": "string"
          },
          "isDaytime": {
            "description": "Indicates whether this period is daytime or nighttime.",
            "type": "boolean"
          },
          "name": {
            "description": "A textual identifier for the period. This value will not be present for hourly forecasts.\n",
            "example": "Tuesday Night",
            "type": "string"
          },
          "number": {
            "description": "Sequential period number.",
            "minimum": 1,
            "type": "integer"
          },
          "probabilityOfPrecipitation": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "shortForecast": {
            "description": "A brief textual forecast summary for the period.",
            "type": "string"
          },
          "startTime": {
            "description": "The starting time that this forecast period is valid for.",
            "format": "date-time",
            "type": "string"
          },
          "temperature": {
            "description": "High/low temperature for the period, depending on whether the period is day or night.\nThis property as an integer value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuantitativeValue"
              },
              {
                "type": "integer"
              }
            ]
          },
          "temperatureTrend": {
            "description": "If not null, indicates a non-diurnal temperature trend for the period (either rising temperature overnight, or falling temperature during the day)\n",
            "enum": [
              "rising",
              "falling"
            ],
            "nullable": true,
            "type": "string"
          },
          "temperatureUnit": {
            "deprecated": true,
            "description": "The unit of the temperature value (Fahrenheit or Celsius).\nThis property is deprecated. Future versions will indicate the unit within the quantitative value object for the temperature property. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.\n",
            "enum": [
              "F",
              "C"
            ],
            "type": "string"
          },
          "windDirection": {
            "description": "The prevailing direction of the wind for the period, using a 16-point compass.",
            "enum": [
              "N",
              "NNE",
              "NE",
              "ENE",
              "E",
              "ESE",
              "SE",
              "SSE",
              "S",
              "SSW",
              "SW",
              "WSW",
              "W",
              "WNW",
              "NW",
              "NNW"
            ],
            "type": "string"
          },
          "windGust": {
            "description": "Peak wind gust for the period.\nThis property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_wind_speed_qv\" feature flag on the request.\n",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuantitativeValue"
              },
              {
                "type": "string"
              }
            ]
          },
          "windSpeed": {
            "description": "Wind speed for the period.\nThis property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_wind_speed_qv\" feature flag on the request.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuantitativeValue"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "type": "object"
      },
      "GridpointForecastUnits": {
        "default": "us",
        "description": "Denotes the units used in the textual portions of the forecast.",
        "enum": [
          "us",
          "si"
        ],
        "type": "string"
      },
      "GridpointGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Gridpoint"
              }
            },
            "type": "object"
          }
        ]
      },
      "GridpointHourlyForecast": {
        "additionalProperties": false,
        "description": "An hourly forecast for a 2.5km grid square.",
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "elevation": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "forecastGenerator": {
            "description": "The internal generator class used to create the forecast text (used for NWS debugging).",
            "type": "string"
          },
          "generatedAt": {
            "description": "The time this forecast data was generated.",
            "format": "date-time",
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "periods": {
            "description": "An array of forecast periods.",
            "items": {
              "$ref": "#/components/schemas/GridpointHourlyForecastPeriod"
            },
            "type": "array"
          },
          "units": {
            "$ref": "#/components/schemas/GridpointForecastUnits"
          },
          "updateTime": {
            "description": "The last update time of the data this forecast was generated from.",
            "format": "date-time",
            "type": "string"
          },
          "validTimes": {
            "$ref": "#/components/schemas/ISO8601Interval"
          }
        },
        "type": "object"
      },
      "GridpointHourlyForecastGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/GridpointHourlyForecast"
              }
            },
            "type": "object"
          }
        ]
      },
      "GridpointHourlyForecastJsonLd": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GridpointHourlyForecast"
          },
          {
            "properties": {
              "@context": {
                "$ref": "#/components/schemas/JsonLdContext"
              },
              "geometry": {
                "$ref": "#/components/schemas/GeometryString"
              }
            },
            "required": [
              "@context",
              "geometry"
            ],
            "type": "object"
          }
        ]
      },
      "GridpointHourlyForecastPeriod": {
        "additionalProperties": false,
        "description": "An object containing forecast information for a specific time period (generally 12-hour or 1-hour).\n",
        "properties": {
          "detailedForecast": {
            "description": "A detailed textual forecast for the period.",
            "type": "string"
          },
          "dewpoint": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "endTime": {
            "description": "The ending time that this forecast period is valid for.",
            "format": "date-time",
            "type": "string"
          },
          "icon": {
            "deprecated": true,
            "description": "A link to an icon representing the forecast summary.",
            "format": "uri",
            "type": "string"
          },
          "isDaytime": {
            "description": "Indicates whether this period is daytime or nighttime.",
            "type": "boolean"
          },
          "name": {
            "description": "A textual identifier for the period. This value will not be present for hourly forecasts.\n",
            "example": "Tuesday Night",
            "type": "string"
          },
          "number": {
            "description": "Sequential period number.",
            "minimum": 1,
            "type": "integer"
          },
          "probabilityOfPrecipitation": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "relativeHumidity": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "shortForecast": {
            "description": "A brief textual forecast summary for the period.",
            "type": "string"
          },
          "startTime": {
            "description": "The starting time that this forecast period is valid for.",
            "format": "date-time",
            "type": "string"
          },
          "temperature": {
            "description": "High/low temperature for the period, depending on whether the period is day or night.\nThis property as an integer value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuantitativeValue"
              },
              {
                "type": "integer"
              }
            ]
          },
          "temperatureTrend": {
            "description": "If not null, indicates a non-diurnal temperature trend for the period (either rising temperature overnight, or falling temperature during the day)\n",
            "enum": [
              "rising",
              "falling"
            ],
            "nullable": true,
            "type": "string"
          },
          "temperatureUnit": {
            "deprecated": true,
            "description": "The unit of the temperature value (Fahrenheit or Celsius).\nThis property is deprecated. Future versions will indicate the unit within the quantitative value object for the temperature property. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.\n",
            "enum": [
              "F",
              "C"
            ],
            "type": "string"
          },
          "windDirection": {
            "description": "The prevailing direction of the wind for the period, using a 16-point compass.",
            "enum": [
              "N",
              "NNE",
              "NE",
              "ENE",
              "E",
              "ESE",
              "SE",
              "SSE",
              "S",
              "SSW",
              "SW",
              "WSW",
              "W",
              "WNW",
              "NW",
              "NNW"
            ],
            "type": "string"
          },
          "windGust": {
            "description": "Peak wind gust for the period.\nThis property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_wind_speed_qv\" feature flag on the request.\n",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuantitativeValue"
              },
              {
                "type": "string"
              }
            ]
          },
          "windSpeed": {
            "description": "Wind speed for the period.\nThis property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_wind_speed_qv\" feature flag on the request.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuantitativeValue"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "type": "object"
      },
      "GridpointJsonLd": {
        "$ref": "#/components/schemas/Gridpoint"
      },
      "GridpointQuantitativeValueLayer": {
        "description": "A gridpoint layer consisting of quantitative values (numeric values with associated units of measure).\n",
        "properties": {
          "uom": {
            "$ref": "#/components/schemas/UnitOfMeasure"
          },
          "values": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "validTime": {
                  "$ref": "#/components/schemas/ISO8601Interval"
                },
                "value": {
                  "nullable": true,
                  "type": "number"
                }
              },
              "required": [
                "validTime",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "values"
        ],
        "type": "object"
      },
      "ISO8601Duration": {
        "description": "A time duration in ISO 8601 format.",
        "example": "P2DT12H",
        "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$",
        "type": "string"
      },
      "ISO8601Interval": {
        "description": "A time interval in ISO 8601 format. This can be one of:\n\n    1. Start and end time\n    2. Start time and duration\n    3. Duration and end time\nThe string \"NOW\" can also be used in place of a start/end time.\n",
        "oneOf": [
          {
            "example": "2007-03-01T13:00:00Z/2008-05-11T15:30:00Z",
            "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$",
            "type": "string"
          },
          {
            "example": "2007-03-01T13:00:00Z/P1Y2M10DT2H30M",
            "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\/P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$",
            "type": "string"
          },
          {
            "example": "P1Y2M10DT2H30M/2008-05-11T15:30:00Z",
            "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?\\/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$",
            "type": "string"
          }
        ]
      },
      "JsonLdContext": {
        "anyOf": [
          {
            "items": {},
            "type": "array"
          },
          {
            "type": "object"
          }
        ]
      },
      "LandRegionCode": {
        "description": "Land region code. These correspond to the six NWS regional headquarters:\n* AR: Alaska Region\n* CR: Central Region\n* ER: Eastern Region\n* PR: Pacific Region\n* SR: Southern Region\n* WR: Western Region\n",
        "enum": [
          "AR",
          "CR",
          "ER",
          "PR",
          "SR",
          "WR"
        ],
        "type": "string"
      },
      "MarineAreaCode": {
        "description": "Marine area code as defined in NWS Directive 10-302:\n* AM: Western North Atlantic Ocean and along U.S. East Coast south of Currituck Beach Light NC following the coastline into Gulf of Mexico to Ocean Reef FL including the Caribbean\n* AN: Western North Atlantic Ocean and along U.S. East Coast from Canadian border south to Currituck Beach Light NC\n* GM: Gulf of Mexico and along the U.S. Gulf Coast from the Mexican border to Ocean Reef FL\n* LC: Lake St. Clair\n* LE: Lake Erie\n* LH: Lake Huron\n* LM: Lake Michigan\n* LO: Lake Ontario\n* LS: Lake Superior\n* PH: Central Pacific Ocean including Hawaiian waters\n* PK: North Pacific Ocean near Alaska and along Alaska coastline including the Bering Sea and the Gulf of Alaska\n* PM: Western Pacific Ocean including Mariana Island waters\n* PS: South Central Pacific Ocean including American Samoa waters\n* PZ: Eastern North Pacific Ocean and along U.S. West Coast from Canadian border to Mexican border\n* SL: St. Lawrence River above St. Regis\n",
        "enum": [
          "AM",
          "AN",
          "GM",
          "LC",
          "LE",
          "LH",
          "LM",
          "LO",
          "LS",
          "PH",
          "PK",
          "PM",
          "PS",
          "PZ",
          "SL"
        ],
        "type": "string"
      },
      "MarineRegionCode": {
        "description": "Marine region code. These are groups of marine areas combined.\n* AL: Alaska waters (PK)\n* AT: Atlantic Ocean (AM, AN)\n* GL: Great Lakes (LC, LE, LH, LM, LO, LS, SL)\n* GM: Gulf of Mexico (GM)\n* PA: Eastern Pacific Ocean and U.S. West Coast (PZ)\n* PI: Central and Western Pacific (PH, PM, PS)\n",
        "enum": [
          "AL",
          "AT",
          "GL",
          "GM",
          "PA",
          "PI"
        ],
        "type": "string"
      },
      "MetarPhenomenon": {
        "additionalProperties": false,
        "description": "An object representing a decoded METAR phenomenon string.",
        "properties": {
          "intensity": {
            "enum": [
              "light",
              "heavy"
            ],
            "nullable": true,
            "type": "string"
          },
          "inVicinity": {
            "type": "boolean"
          },
          "modifier": {
            "enum": [
              "patches",
              "blowing",
              "low_drifting",
              "freezing",
              "shallow",
              "partial",
              "showers"
            ],
            "nullable": true,
            "type": "string"
          },
          "rawString": {
            "type": "string"
          },
          "weather": {
            "enum": [
              "fog_mist",
              "dust_storm",
              "dust",
              "drizzle",
              "funnel_cloud",
              "fog",
              "smoke",
              "hail",
              "snow_pellets",
              "haze",
              "ice_crystals",
              "ice_pellets",
              "dust_whirls",
              "spray",
              "rain",
              "sand",
              "snow_grains",
              "snow",
              "squalls",
              "sand_storm",
              "thunderstorms",
              "unknown",
              "volcanic_ash"
            ],
            "type": "string"
          }
        },
        "required": [
          "intensity",
          "modifier",
          "weather",
          "rawString"
        ],
        "type": "object"
      },
      "MetarSkyCoverage": {
        "enum": [
          "OVC",
          "BKN",
          "SCT",
          "FEW",
          "SKC",
          "CLR",
          "VV"
        ],
        "type": "string"
      },
      "NWSCenterWeatherServiceUnitId": {
        "description": "Three-letter identifier for a Center Weather Service Unit (CWSU).",
        "enum": [
          "ZAB",
          "ZAN",
          "ZAU",
          "ZBW",
          "ZDC",
          "ZDV",
          "ZFA",
          "ZFW",
          "ZHU",
          "ZID",
          "ZJX",
          "ZKC",
          "ZLA",
          "ZLC",
          "ZMA",
          "ZME",
          "ZMP",
          "ZNY",
          "ZOA",
          "ZOB",
          "ZSE",
          "ZTL"
        ],
        "type": "string"
      },
      "NWSForecastOfficeId": {
        "description": "Three-letter identifier for a NWS office.",
        "enum": [
          "AKQ",
          "ALY",
          "BGM",
          "BOX",
          "BTV",
          "BUF",
          "CAE",
          "CAR",
          "CHS",
          "CLE",
          "CTP",
          "GSP",
          "GYX",
          "ILM",
          "ILN",
          "LWX",
          "MHX",
          "OKX",
          "PBZ",
          "PHI",
          "RAH",
          "RLX",
          "RNK",
          "ABQ",
          "AMA",
          "BMX",
          "BRO",
          "CRP",
          "EPZ",
          "EWX",
          "FFC",
          "FWD",
          "HGX",
          "HUN",
          "JAN",
          "JAX",
          "KEY",
          "LCH",
          "LIX",
          "LUB",
          "LZK",
          "MAF",
          "MEG",
          "MFL",
          "MLB",
          "MOB",
          "MRX",
          "OHX",
          "OUN",
          "SHV",
          "SJT",
          "SJU",
          "TAE",
          "TBW",
          "TSA",
          "ABR",
          "APX",
          "ARX",
          "BIS",
          "BOU",
          "CYS",
          "DDC",
          "DLH",
          "DMX",
          "DTX",
          "DVN",
          "EAX",
          "FGF",
          "FSD",
          "GID",
          "GJT",
          "GLD",
          "GRB",
          "GRR",
          "ICT",
          "ILX",
          "IND",
          "IWX",
          "JKL",
          "LBF",
          "LMK",
          "LOT",
          "LSX",
          "MKX",
          "MPX",
          "MQT",
          "OAX",
          "PAH",
          "PUB",
          "RIW",
          "SGF",
          "TOP",
          "UNR",
          "BOI",
          "BYZ",
          "EKA",
          "FGZ",
          "GGW",
          "HNX",
          "LKN",
          "LOX",
          "MFR",
          "MSO",
          "MTR",
          "OTX",
          "PDT",
          "PIH",
          "PQR",
          "PSR",
          "REV",
          "SEW",
          "SGX",
          "SLC",
          "STO",
          "TFX",
          "TWC",
          "VEF",
          "AER",
          "AFC",
          "AFG",
          "AJK",
          "ALU",
          "GUM",
          "HPA",
          "HFO",
          "PPG",
          "STU",
          "NH1",
          "NH2",
          "ONA",
          "ONP"
        ],
        "type": "string"
      },
      "NWSNationalHQId": {
        "description": "Three-letter identifier for NWS National HQ.",
        "enum": [
          "NWS"
        ],
        "type": "string"
      },
      "NWSOfficeId": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/NWSForecastOfficeId"
          },
          {
            "$ref": "#/components/schemas/NWSRegionalHQId"
          },
          {
            "$ref": "#/components/schemas/NWSNationalHQId"
          }
        ]
      },
      "NWSRegionalHQId": {
        "description": "Three-letter identifier for a NWS Regional HQ.",
        "enum": [
          "ARH",
          "CRH",
          "ERH",
          "PRH",
          "SRH",
          "WRH"
        ],
        "type": "string"
      },
      "NWSZoneID": {
        "description": "UGC identifier for a NWS forecast zone or county.\nThe first two letters will correspond to either a state code or marine area code (see #/components/schemas/StateTerritoryCode and #/components/schemas/MarineAreaCode for lists of valid letter combinations).\nThe third letter will be Z for public/fire zone or C for county.\n",
        "pattern": "^(A[KLMNRSZ]|C[AOT]|D[CE]|F[LM]|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSWZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\\d{3}$",
        "type": "string"
      },
      "NWSZoneType": {
        "enum": [
          "land",
          "marine",
          "forecast",
          "public",
          "coastal",
          "offshore",
          "fire",
          "county"
        ],
        "type": "string"
      },
      "Observation": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@id": {
            "format": "uri",
            "type": "string"
          },
          "@type": {
            "enum": [
              "wx:ObservationStation"
            ],
            "type": "string"
          },
          "barometricPressure": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "cloudLayers": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "amount": {
                  "$ref": "#/components/schemas/MetarSkyCoverage"
                },
                "base": {
                  "$ref": "#/components/schemas/QuantitativeValue"
                }
              },
              "required": [
                "base",
                "amount"
              ],
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "dewpoint": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "elevation": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "heatIndex": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "icon": {
            "deprecated": true,
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "maxTemperatureLast24Hours": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "minTemperatureLast24Hours": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "precipitationLast3Hours": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "precipitationLast6Hours": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "precipitationLastHour": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "presentWeather": {
            "items": {
              "$ref": "#/components/schemas/MetarPhenomenon"
            },
            "type": "array"
          },
          "rawMessage": {
            "type": "string"
          },
          "relativeHumidity": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "seaLevelPressure": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "station": {
            "format": "uri",
            "type": "string"
          },
          "temperature": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "textDescription": {
            "type": "string"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "windChill": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "windDirection": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "windGust": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "windSpeed": {
            "$ref": "#/components/schemas/QuantitativeValue"
          }
        },
        "type": "object"
      },
      "ObservationCollectionGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeatureCollection"
          },
          {
            "properties": {
              "features": {
                "items": {
                  "properties": {
                    "properties": {
                      "$ref": "#/components/schemas/Observation"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "ObservationCollectionJsonLd": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@graph": {
            "items": {
              "$ref": "#/components/schemas/Observation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ObservationGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Observation"
              }
            },
            "type": "object"
          }
        ]
      },
      "ObservationJsonLd": {
        "$ref": "#/components/schemas/Observation"
      },
      "ObservationStation": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@id": {
            "format": "uri",
            "type": "string"
          },
          "@type": {
            "enum": [
              "wx:ObservationStation"
            ],
            "type": "string"
          },
          "bearing": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "county": {
            "description": "A link to the NWS county zone containing this station.",
            "format": "uri",
            "type": "string"
          },
          "distance": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "elevation": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "fireWeatherZone": {
            "description": "A link to the NWS fire weather forecast zone containing this station.",
            "format": "uri",
            "type": "string"
          },
          "forecast": {
            "description": "A link to the NWS public forecast zone containing this station.",
            "format": "uri",
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "description": "The data provider for this station. E.g., \"ASOS,\" \"MesoWest,\" etc.",
            "type": "string"
          },
          "stationIdentifier": {
            "type": "string"
          },
          "subProvider": {
            "description": "The sub-provider of for this station. E.g., \"FAA,\" \"DOT,\" etc.",
            "type": "string"
          },
          "timeZone": {
            "format": "iana-time-zone-identifier",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ObservationStationCollectionGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeatureCollection"
          },
          {
            "properties": {
              "features": {
                "items": {
                  "properties": {
                    "properties": {
                      "$ref": "#/components/schemas/ObservationStation"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "observationStations": {
                "items": {
                  "format": "uri",
                  "type": "string"
                },
                "type": "array"
              },
              "pagination": {
                "$ref": "#/components/schemas/PaginationInfo"
              }
            },
            "type": "object"
          }
        ]
      },
      "ObservationStationCollectionJsonLd": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@graph": {
            "items": {
              "$ref": "#/components/schemas/ObservationStation"
            },
            "type": "array"
          },
          "observationStations": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "type": "object"
      },
      "ObservationStationGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/ObservationStation"
              }
            },
            "type": "object"
          }
        ]
      },
      "ObservationStationJsonLd": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ObservationStation"
          },
          {
            "properties": {
              "@context": {
                "$ref": "#/components/schemas/JsonLdContext"
              },
              "geometry": {
                "$ref": "#/components/schemas/GeometryString"
              }
            },
            "required": [
              "@context",
              "geometry"
            ],
            "type": "object"
          }
        ]
      },
      "Office": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@type": {
            "enum": [
              "GovernmentOrganization"
            ],
            "type": "string"
          },
          "address": {
            "additionalProperties": false,
            "properties": {
              "@type": {
                "enum": [
                  "PostalAddress"
                ],
                "type": "string"
              },
              "addressLocality": {
                "type": "string"
              },
              "addressRegion": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "streetAddress": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "approvedObservationStations": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "email": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nwsRegion": {
            "type": "string"
          },
          "parentOrganization": {
            "format": "uri",
            "type": "string"
          },
          "responsibleCounties": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "responsibleFireZones": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "responsibleForecastZones": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "sameAs": {
            "format": "uri",
            "type": "string"
          },
          "telephone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OfficeHeadline": {
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "content": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "important": {
            "type": "boolean"
          },
          "issuanceTime": {
            "format": "date-time",
            "type": "string"
          },
          "link": {
            "format": "uri",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "office": {
            "format": "uri",
            "type": "string"
          },
          "summary": {
            "nullable": true,
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OfficeHeadlineCollection": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@graph": {
            "items": {
              "$ref": "#/components/schemas/OfficeHeadline"
            },
            "type": "array"
          }
        },
        "required": [
          "@context",
          "@graph"
        ],
        "type": "object"
      },
      "PaginationInfo": {
        "additionalProperties": false,
        "description": "Links for retrieving more data from paged data sets",
        "properties": {
          "next": {
            "description": "A link to the next page of records",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "next"
        ],
        "type": "object"
      },
      "Point": {
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@id": {
            "format": "uri",
            "type": "string"
          },
          "@type": {
            "enum": [
              "wx:Point"
            ],
            "type": "string"
          },
          "county": {
            "format": "uri",
            "type": "string"
          },
          "cwa": {
            "$ref": "#/components/schemas/NWSForecastOfficeId"
          },
          "fireWeatherZone": {
            "format": "uri",
            "type": "string"
          },
          "forecast": {
            "format": "uri",
            "type": "string"
          },
          "forecastGridData": {
            "format": "uri",
            "type": "string"
          },
          "forecastHourly": {
            "format": "uri",
            "type": "string"
          },
          "forecastOffice": {
            "format": "uri",
            "type": "string"
          },
          "forecastZone": {
            "format": "uri",
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "gridId": {
            "$ref": "#/components/schemas/NWSForecastOfficeId"
          },
          "gridX": {
            "minimum": 0,
            "type": "integer"
          },
          "gridY": {
            "minimum": 0,
            "type": "integer"
          },
          "observationStations": {
            "format": "uri",
            "type": "string"
          },
          "radarStation": {
            "type": "string"
          },
          "relativeLocation": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RelativeLocationGeoJson"
              },
              {
                "$ref": "#/components/schemas/RelativeLocationJsonLd"
              }
            ]
          },
          "timeZone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PointGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Point"
              }
            },
            "type": "object"
          }
        ]
      },
      "PointJsonLd": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Point"
          },
          {
            "properties": {
              "@context": {
                "$ref": "#/components/schemas/JsonLdContext"
              },
              "geometry": {
                "$ref": "#/components/schemas/GeometryString"
              }
            },
            "required": [
              "@context",
              "geometry"
            ],
            "type": "object"
          }
        ]
      },
      "PointString": {
        "pattern": "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$",
        "type": "string"
      },
      "ProblemDetail": {
        "additionalProperties": true,
        "description": "Detail about an error. This document conforms to RFC 7807 (Problem Details for HTTP APIs).",
        "properties": {
          "correlationId": {
            "description": "A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
            "example": "493c3a1d-f87e-407f-ae2c-24483f5aab63",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "An unexpected problem has occurred.",
            "type": "string"
          },
          "instance": {
            "description": "A URI reference (RFC 3986) that identifies the specific occurrence of the problem. This is only an identifier and is not necessarily a resolvable URL.\n",
            "example": "urn:noaa:nws:api:request:493c3a1d-f87e-407f-ae2c-24483f5aab63",
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code (RFC 7231, Section 6) generated by the origin server for this occurrence of the problem.\n",
            "example": 500,
            "maximum": 999,
            "minimum": 100,
            "type": "number"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type.",
            "example": "Unexpected Problem",
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "A URI reference (RFC 3986) that identifies the problem type. This is only an identifier and is not necessarily a resolvable URL.\n",
            "example": "urn:noaa:nws:api:UnexpectedProblem",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "type",
          "title",
          "status",
          "detail",
          "instance",
          "correlationId"
        ],
        "type": "object"
      },
      "QuantitativeValue": {
        "additionalProperties": false,
        "description": "A structured value representing a measurement and its unit of measure. This object is a slightly modified version of the schema.org definition at https://schema.org/QuantitativeValue\n",
        "properties": {
          "maxValue": {
            "description": "The maximum value of a range of measured values",
            "type": "number"
          },
          "minValue": {
            "description": "The minimum value of a range of measured values",
            "type": "number"
          },
          "qualityControl": {
            "description": "For values in observation records, the quality control flag from the MADIS system. The definitions of these flags can be found at https://madis.ncep.noaa.gov/madis_sfc_qc_notes.shtml\n",
            "enum": [
              "Z",
              "C",
              "S",
              "V",
              "X",
              "Q",
              "G",
              "B",
              "T"
            ],
            "type": "string"
          },
          "unitCode": {
            "$ref": "#/components/schemas/UnitOfMeasure"
          },
          "value": {
            "description": "A measured value",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "RegionCode": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/LandRegionCode"
          },
          {
            "$ref": "#/components/schemas/MarineRegionCode"
          }
        ]
      },
      "RelativeLocation": {
        "properties": {
          "bearing": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "city": {
            "type": "string"
          },
          "distance": {
            "$ref": "#/components/schemas/QuantitativeValue"
          },
          "state": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelativeLocationGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/RelativeLocation"
              }
            },
            "type": "object"
          }
        ]
      },
      "RelativeLocationJsonLd": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelativeLocation"
          },
          {
            "properties": {
              "geometry": {
                "$ref": "#/components/schemas/GeometryString"
              }
            },
            "required": [
              "geometry"
            ],
            "type": "object"
          }
        ]
      },
      "Sigmet": {
        "additionalProperties": false,
        "properties": {
          "atsu": {
            "$ref": "#/components/schemas/ATSUIdentifier"
          },
          "end": {
            "format": "date-time",
            "type": "string"
          },
          "fir": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uri",
            "type": "string"
          },
          "issueTime": {
            "format": "date-time",
            "type": "string"
          },
          "phenomenon": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sequence": {
            "nullable": true,
            "type": "string"
          },
          "start": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SigmetCollectionGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeatureCollection"
          },
          {
            "properties": {
              "features": {
                "items": {
                  "$ref": "#/components/schemas/SigmetGeoJson"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "SigmetGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Sigmet"
              }
            },
            "type": "object"
          }
        ]
      },
      "SigmetSequenceNumber": {
        "type": "string"
      },
      "StateTerritoryCode": {
        "enum": [
          "AL",
          "AK",
          "AS",
          "AR",
          "AZ",
          "CA",
          "CO",
          "CT",
          "DE",
          "DC",
          "FL",
          "GA",
          "GU",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "OH",
          "OK",
          "OR",
          "PA",
          "PR",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VT",
          "VI",
          "VA",
          "WA",
          "WV",
          "WI",
          "WY",
          "MP",
          "PW",
          "FM",
          "MH"
        ],
        "type": "string"
      },
      "TextProduct": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "id": {
            "type": "string"
          },
          "issuanceTime": {
            "format": "date-time",
            "type": "string"
          },
          "issuingOffice": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productText": {
            "type": "string"
          },
          "wmoCollectiveId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TextProductCollection": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@graph": {
            "items": {
              "$ref": "#/components/schemas/TextProduct"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TextProductLocationCollection": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "locations": {
            "additionalProperties": {
              "nullable": true,
              "type": "string"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "TextProductTypeCollection": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@graph": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "productCode": {
                  "type": "string"
                },
                "productName": {
                  "type": "string"
                }
              },
              "required": [
                "productCode",
                "productName"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Time": {
        "description": "A time (in HHMM format). This is always specified in UTC (Zulu) time.",
        "pattern": "^([01][0-9]|2[0-3])[0-5][0-9]$",
        "type": "string"
      },
      "UnitOfMeasure": {
        "description": "A string denoting a unit of measure, expressed in the format \"{unit}\" or \"{namespace}:{unit}\".\nUnits with the namespace \"wmo\" or \"wmoUnit\" are defined in the World Meteorological Organization Codes Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to http://codes.wmo.int/common/unit/{unit}.\nUnits with the namespace \"nwsUnit\" are currently custom and do not align to any standard.\nUnits with no namespace or the namespace \"uc\" are compliant with the Unified Code for Units of Measure syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0 (ISO/DIS 19156).\nNamespaced units are considered deprecated. We will be aligning API to use the same standards as GML/IWXXM in the future.\n",
        "pattern": "^((wmo|uc|wmoUnit|nwsUnit):)?.*$",
        "type": "string"
      },
      "Zone": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "awipsLocationIdentifier": {
            "type": "string"
          },
          "cwa": {
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/NWSForecastOfficeId"
            },
            "type": "array"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "forecastOffice": {
            "format": "uri",
            "type": "string"
          },
          "forecastOffices": {
            "deprecated": true,
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "gridIdentifier": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/NWSZoneID"
          },
          "name": {
            "type": "string"
          },
          "observationStations": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "radarStation": {
            "nullable": true,
            "type": "string"
          },
          "state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateTerritoryCode"
              },
              {
                "enum": [
                  ""
                ],
                "nullable": true,
                "type": "string"
              }
            ]
          },
          "timeZone": {
            "items": {
              "format": "iana-time-zone-identifier",
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/NWSZoneType"
          }
        },
        "type": "object"
      },
      "ZoneCollectionGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeatureCollection"
          },
          {
            "properties": {
              "features": {
                "items": {
                  "properties": {
                    "properties": {
                      "$ref": "#/components/schemas/Zone"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "ZoneCollectionJsonLd": {
        "additionalProperties": false,
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "@graph": {
            "items": {
              "$ref": "#/components/schemas/Zone"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ZoneForecast": {
        "additionalProperties": false,
        "description": "An object representing a zone area forecast.",
        "properties": {
          "@context": {
            "$ref": "#/components/schemas/JsonLdContext"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryString"
          },
          "periods": {
            "description": "An array of forecast periods.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "detailedForecast": {
                  "description": "A detailed textual forecast for the period.",
                  "type": "string"
                },
                "name": {
                  "description": "A textual description of the period.",
                  "example": "This Afternoon",
                  "type": "string"
                },
                "number": {
                  "description": "A sequential identifier number.",
                  "type": "integer"
                }
              },
              "required": [
                "number",
                "name",
                "detailedForecast"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "updated": {
            "description": "The time this zone forecast product was published.",
            "format": "date-time",
            "type": "string"
          },
          "zone": {
            "description": "An API link to the zone this forecast is for.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ZoneForecastGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/ZoneForecast"
              }
            },
            "type": "object"
          }
        ]
      },
      "ZoneForecastJsonLd": {
        "$ref": "#/components/schemas/ZoneForecast"
      },
      "ZoneGeoJson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonFeature"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Zone"
              }
            },
            "type": "object"
          }
        ]
      },
      "ZoneJsonLd": {
        "$ref": "#/components/schemas/Zone"
      }
    },
    "securitySchemes": {
      "userAgent": {
        "description": "We require that all consumers of the API include a User-Agent header in requests. This is due to a high number of scripts exhibiting abusive behavior (intentional or unintentional). We recommend setting the value to something that identifies your application and includes a contact email. This will help us contact you if we notice unusual behavior and also aid in troubleshooting issues.\nThe API remains open and free to use and there are no limits imposed based on the User-Agent string.\nThis mechanism will be replaced with a more typical API key system at a later date.\n",
        "in": "header",
        "name": "User-Agent",
        "type": "apiKey"
      }
    }
  },
  "externalDocs": {
    "description": "Full API documentation",
    "url": "https://www.weather.gov/documentation/services-web-api"
  },
  "info": {
    "description": "weather.gov API",
    "title": "weather.gov API",
    "version": "2.5.1"
  },
  "openapi": "3.0.3",
  "paths": {
    "/alerts": {
      "get": {
        "description": "Returns all alerts",
        "operationId": "alerts_query",
        "parameters": [
          {
            "deprecated": true,
            "description": "List only active alerts (use /alerts/active endpoints instead)",
            "in": "query",
            "name": "active",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/QueryStartTime"
          },
          {
            "$ref": "#/components/parameters/QueryEndTime"
          },
          {
            "$ref": "#/components/parameters/AlertStatus"
          },
          {
            "$ref": "#/components/parameters/AlertMessageType"
          },
          {
            "$ref": "#/components/parameters/AlertEventName"
          },
          {
            "$ref": "#/components/parameters/AlertCode"
          },
          {
            "$ref": "#/components/parameters/AlertArea"
          },
          {
            "$ref": "#/components/parameters/AlertPoint"
          },
          {
            "$ref": "#/components/parameters/AlertRegion"
          },
          {
            "$ref": "#/components/parameters/AlertRegionType"
          },
          {
            "$ref": "#/components/parameters/AlertZone"
          },
          {
            "$ref": "#/components/parameters/AlertUrgency"
          },
          {
            "$ref": "#/components/parameters/AlertSeverity"
          },
          {
            "$ref": "#/components/parameters/AlertCertainty"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/PaginationCursor"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertCollection"
          },
          "301": {
            "description": "Certain common queries may be redirected to discrete URLs"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/alerts/{id}": {
      "get": {
        "description": "Returns a specific alert",
        "operationId": "alerts_single",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/cap+xml": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCap"
                }
              },
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertJsonLd"
                }
              }
            },
            "description": "An alert record",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            },
            "x-url-content-negotiation-extensions": {
              "cap": "application/cap+xml",
              "json": "application/geo+json"
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Alert identifier",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AlertId"
          }
        }
      ]
    },
    "/alerts/active": {
      "get": {
        "description": "Returns all currently active alerts",
        "operationId": "alerts_active",
        "parameters": [
          {
            "$ref": "#/components/parameters/AlertStatus"
          },
          {
            "$ref": "#/components/parameters/AlertMessageType"
          },
          {
            "$ref": "#/components/parameters/AlertEventName"
          },
          {
            "$ref": "#/components/parameters/AlertCode"
          },
          {
            "$ref": "#/components/parameters/AlertArea"
          },
          {
            "$ref": "#/components/parameters/AlertPoint"
          },
          {
            "$ref": "#/components/parameters/AlertRegion"
          },
          {
            "$ref": "#/components/parameters/AlertRegionType"
          },
          {
            "$ref": "#/components/parameters/AlertZone"
          },
          {
            "$ref": "#/components/parameters/AlertUrgency"
          },
          {
            "$ref": "#/components/parameters/AlertSeverity"
          },
          {
            "$ref": "#/components/parameters/AlertCertainty"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertCollection"
          },
          "301": {
            "description": "Certain common queries may be redirected to discrete URLs"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/alerts/active/area/{area}": {
      "get": {
        "description": "Returns active alerts for the given area (state or marine area)",
        "operationId": "alerts_active_area",
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertCollection"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "State/area ID",
          "in": "path",
          "name": "area",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AreaCode"
          }
        }
      ]
    },
    "/alerts/active/count": {
      "get": {
        "description": "Returns info on the number of active alerts",
        "operationId": "alerts_active_count",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "areas": {
                      "additionalProperties": {
                        "minimum": 1,
                        "type": "integer"
                      },
                      "description": "Active alerts by area (state/territory)",
                      "type": "object"
                    },
                    "land": {
                      "description": "The total number of active alerts affecting land zones",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "marine": {
                      "description": "The total number of active alerts affecting marine zones",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "regions": {
                      "additionalProperties": {
                        "minimum": 1,
                        "type": "integer"
                      },
                      "description": "Active alerts by marine region",
                      "type": "object"
                    },
                    "total": {
                      "description": "The total number of active alerts",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "zones": {
                      "additionalProperties": {
                        "minimum": 1,
                        "type": "integer"
                      },
                      "description": "Active alerts by NWS public zone or county code",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A data structure showing the counts of active alerts broken down by various categories",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/alerts/active/region/{region}": {
      "get": {
        "description": "Returns active alerts for the given marine region",
        "operationId": "alerts_active_region",
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertCollection"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Marine region ID",
          "in": "path",
          "name": "region",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MarineRegionCode"
          }
        }
      ]
    },
    "/alerts/active/zone/{zoneId}": {
      "get": {
        "description": "Returns active alerts for the given NWS public zone or county",
        "operationId": "alerts_active_zone",
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertCollection"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/NWSZoneId"
        }
      ]
    },
    "/alerts/types": {
      "get": {
        "description": "Returns a list of alert types",
        "operationId": "alerts_types",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "eventTypes": {
                      "description": "A list of recognized event types",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A list of recognized event types",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/aviation/cwsus/{cwsuId}": {
      "get": {
        "description": "Returns metadata about a Center Weather Service Unit",
        "operationId": "cwsu",
        "parameters": [
          {
            "$ref": "#/components/parameters/NWSCenterWeatherServiceUnitId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CenterWeatherServiceUnitJsonLd"
                }
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/aviation/cwsus/{cwsuId}/cwas": {
      "get": {
        "description": "Returns a list of Center Weather Advisories from a CWSU",
        "operationId": "cwas",
        "parameters": [
          {
            "$ref": "#/components/parameters/NWSCenterWeatherServiceUnitId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/CenterWeatherAdvisoryCollectionGeoJson"
                }
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/aviation/cwsus/{cwsuId}/cwas/{date}/{sequence}": {
      "get": {
        "description": "Returns a list of Center Weather Advisories from a CWSU",
        "operationId": "cwa",
        "parameters": [
          {
            "$ref": "#/components/parameters/NWSCenterWeatherServiceUnitId"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "description": "Sequence number",
            "in": "path",
            "name": "sequence",
            "required": true,
            "schema": {
              "minimum": 100,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/CenterWeatherAdvisoryGeoJson"
                }
              },
              "application/vnd.noaa.uswx+xml": {
                "schema": {}
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets": {
      "get": {
        "description": "Returns a list of SIGMET/AIRMETs",
        "operationId": "sigmetQuery",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryStartTime"
          },
          {
            "$ref": "#/components/parameters/QueryEndTime"
          },
          {
            "$ref": "#/components/parameters/QueryDate"
          },
          {
            "description": "ATSU identifier",
            "in": "query",
            "name": "atsu",
            "schema": {
              "$ref": "#/components/schemas/ATSUIdentifier"
            }
          },
          {
            "description": "SIGMET sequence number",
            "in": "query",
            "name": "sequence",
            "schema": {
              "$ref": "#/components/schemas/SigmetSequenceNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/SigmetCollectionGeoJson"
                }
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets/{atsu}": {
      "get": {
        "description": "Returns a list of SIGMET/AIRMETs for the specified ATSU",
        "operationId": "sigmetsByATSU",
        "parameters": [
          {
            "$ref": "#/components/parameters/ATSUIdentifier"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/SigmetCollectionGeoJson"
                }
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets/{atsu}/{date}": {
      "get": {
        "description": "Returns a list of SIGMET/AIRMETs for the specified ATSU for the specified date",
        "operationId": "sigmetsByATSUByDate",
        "parameters": [
          {
            "$ref": "#/components/parameters/ATSUIdentifier"
          },
          {
            "$ref": "#/components/parameters/Date"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/SigmetCollectionGeoJson"
                }
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets/{atsu}/{date}/{time}": {
      "get": {
        "description": "Returns a specific SIGMET/AIRMET",
        "operationId": "sigmet",
        "parameters": [
          {
            "$ref": "#/components/parameters/ATSUIdentifier"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Time"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/SigmetGeoJson"
                }
              },
              "application/vnd.noaa.uswx+xml": {
                "schema": {}
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/glossary": {
      "get": {
        "description": "Returns glossary terms",
        "operationId": "glossary",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "@context": {
                      "$ref": "#/components/schemas/JsonLdContext"
                    },
                    "glossary": {
                      "description": "A list of glossary terms",
                      "items": {
                        "properties": {
                          "definition": {
                            "description": "A definition for the term",
                            "type": "string"
                          },
                          "term": {
                            "description": "The term being defined",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A set of glossary terms",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/gridpoints/{wfo}/{x},{y}": {
      "get": {
        "description": "Returns raw numerical forecast data for a 2.5km grid area",
        "operationId": "gridpoint",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/GridpointGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GridpointJsonLd"
                }
              }
            },
            "description": "Gridpoint forecast data",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/GridpointWFO"
        },
        {
          "$ref": "#/components/parameters/GridpointX"
        },
        {
          "$ref": "#/components/parameters/GridpointY"
        }
      ]
    },
    "/gridpoints/{wfo}/{x},{y}/forecast": {
      "get": {
        "description": "Returns a textual forecast for a 2.5km grid area",
        "operationId": "gridpoint_forecast",
        "parameters": [
          {
            "$ref": "#/components/parameters/GridpointForecastFeatureFlags"
          },
          {
            "$ref": "#/components/parameters/GridpointForecastUnits"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Gridpoint12hForecast"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/GridpointWFO"
        },
        {
          "$ref": "#/components/parameters/GridpointX"
        },
        {
          "$ref": "#/components/parameters/GridpointY"
        }
      ]
    },
    "/gridpoints/{wfo}/{x},{y}/forecast/hourly": {
      "get": {
        "description": "Returns a textual hourly forecast for a 2.5km grid area",
        "operationId": "gridpoint_forecast_hourly",
        "parameters": [
          {
            "$ref": "#/components/parameters/GridpointForecastFeatureFlags"
          },
          {
            "$ref": "#/components/parameters/GridpointForecastUnits"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GridpointHourlyForecast"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/GridpointWFO"
        },
        {
          "$ref": "#/components/parameters/GridpointX"
        },
        {
          "$ref": "#/components/parameters/GridpointY"
        }
      ]
    },
    "/gridpoints/{wfo}/{x},{y}/stations": {
      "get": {
        "description": "Returns a list of observation stations usable for a given 2.5km grid area",
        "operationId": "gridpoint_stations",
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ObservationStationCollection"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/GridpointWFO"
        },
        {
          "$ref": "#/components/parameters/GridpointX"
        },
        {
          "$ref": "#/components/parameters/GridpointY"
        },
        {
          "$ref": "#/components/parameters/Limit"
        },
        {
          "$ref": "#/components/parameters/ObservationsStationFeatureFlags"
        }
      ]
    },
    "/offices/{officeId}": {
      "get": {
        "description": "Returns metadata about a NWS forecast office",
        "operationId": "office",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Office"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/NWSOfficeId"
        }
      ]
    },
    "/offices/{officeId}/headlines": {
      "get": {
        "description": "Returns a list of news headlines for a given NWS office",
        "operationId": "office_headlines",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/OfficeHeadlineCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/NWSOfficeId"
        }
      ]
    },
    "/offices/{officeId}/headlines/{headlineId}": {
      "get": {
        "description": "Returns a specific news headline for a given NWS office",
        "operationId": "office_headline",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/OfficeHeadline"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/NWSOfficeId"
        },
        {
          "description": "Headline record ID",
          "in": "path",
          "name": "headlineId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/points/{latitude},{longitude}": {
      "get": {
        "description": "Returns metadata about a given latitude/longitude point",
        "operationId": "point",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/PointGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PointJsonLd"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/Latitude"
        },
        {
          "$ref": "#/components/parameters/Longitude"
        }
      ]
    },
    "/points/{latitude},{longitude}/stations": {
      "get": {
        "deprecated": true,
        "description": "Returns a list of observation stations for a given point",
        "operationId": "point_stations",
        "parameters": [],
        "responses": {
          "301": {
            "description": "redirect to gridpoint stations"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/Latitude"
        },
        {
          "$ref": "#/components/parameters/Longitude"
        }
      ]
    },
    "/products": {
      "get": {
        "description": "Returns a list of text products",
        "operationId": "products_query",
        "parameters": [
          {
            "description": "Location id",
            "explode": false,
            "in": "query",
            "name": "location",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Start time",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End time",
            "in": "query",
            "name": "end",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Issuing office",
            "explode": false,
            "in": "query",
            "name": "office",
            "schema": {
              "items": {
                "pattern": "^[A-Z]{4}$",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "WMO id code",
            "explode": false,
            "in": "query",
            "name": "wmoid",
            "schema": {
              "items": {
                "pattern": "^[A-Z]{4}\\d{2}$",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Product code",
            "explode": false,
            "in": "query",
            "name": "type",
            "schema": {
              "items": {
                "pattern": "^\\w{3}$",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Limit",
            "in": "query",
            "name": "limit",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "description": "Returns a specific text product",
        "operationId": "product",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProduct"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": ".",
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/products/locations": {
      "get": {
        "description": "Returns a list of valid text product issuance locations",
        "operationId": "product_locations",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductLocationCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/products/locations/{locationId}/types": {
      "get": {
        "description": "Returns a list of valid text product types for a given issuance location",
        "operationId": "location_products",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductTypeCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": ".",
          "in": "path",
          "name": "locationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/products/types": {
      "get": {
        "description": "Returns a list of valid text product types and codes",
        "operationId": "product_types",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductTypeCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/products/types/{typeId}": {
      "get": {
        "description": "Returns a list of text products of a given type",
        "operationId": "products_type",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": ".",
          "in": "path",
          "name": "typeId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/products/types/{typeId}/locations": {
      "get": {
        "description": "Returns a list of valid text product issuance locations for a given product type",
        "operationId": "products_type_locations",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductLocationCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": ".",
          "in": "path",
          "name": "typeId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/products/types/{typeId}/locations/{locationId}": {
      "get": {
        "description": "Returns a list of text products of a given type for a given issuance location",
        "operationId": "products_type_location",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": ".",
          "in": "path",
          "name": "typeId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": ".",
          "in": "path",
          "name": "locationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/products/types/{typeId}/locations/{locationId}/latest": {
      "get": {
        "description": "Returns latest text products of a given type for a given issuance location with product text",
        "operationId": "latest_product_type_location",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/TextProductCollection"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": ".",
          "in": "path",
          "name": "typeId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": ".",
          "in": "path",
          "name": "locationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/radar/profilers/{stationId}": {
      "get": {
        "description": "Returns metadata about a given radar wind profiler",
        "operationId": "radar_profiler",
        "parameters": [
          {
            "description": "Time interval",
            "in": "query",
            "name": "time",
            "schema": {
              "$ref": "#/components/schemas/ISO8601Interval"
            }
          },
          {
            "description": "Averaging interval",
            "in": "query",
            "name": "interval",
            "schema": {
              "$ref": "#/components/schemas/ISO8601Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Profiler station ID",
          "in": "path",
          "name": "stationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/radar/queues/{host}": {
      "get": {
        "description": "Returns metadata about a given radar queue",
        "operationId": "radar_queue",
        "parameters": [
          {
            "description": "Record limit",
            "in": "query",
            "name": "limit",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Range for arrival time",
            "in": "query",
            "name": "arrived",
            "schema": {
              "$ref": "#/components/schemas/ISO8601Interval"
            }
          },
          {
            "description": "Range for creation time",
            "in": "query",
            "name": "created",
            "schema": {
              "$ref": "#/components/schemas/ISO8601Interval"
            }
          },
          {
            "description": "Range for publish time",
            "in": "query",
            "name": "published",
            "schema": {
              "$ref": "#/components/schemas/ISO8601Interval"
            }
          },
          {
            "description": "Station identifier",
            "in": "query",
            "name": "station",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Record type",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Originating product feed",
            "in": "query",
            "name": "feed",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resolution version",
            "in": "query",
            "name": "resolution",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "LDM host",
          "in": "path",
          "name": "host",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/radar/servers": {
      "get": {
        "description": "Returns a list of radar servers",
        "operationId": "radar_servers",
        "parameters": [
          {
            "description": "Show records from specific reporting host",
            "in": "query",
            "name": "reportingHost",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/radar/servers/{id}": {
      "get": {
        "description": "Returns metadata about a given radar server",
        "operationId": "radar_server",
        "parameters": [
          {
            "description": "Show records from specific reporting host",
            "in": "query",
            "name": "reportingHost",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Server ID",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/radar/stations": {
      "get": {
        "description": "Returns a list of radar stations",
        "operationId": "radar_stations",
        "parameters": [
          {
            "description": "Limit results to a specific station type or types",
            "explode": false,
            "in": "query",
            "name": "stationType",
            "schema": {
              "items": {
                "pattern": "^[A-Za-z0-9-]+$",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Show RDA and latency info from specific reporting host",
            "in": "query",
            "name": "reportingHost",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show latency info from specific LDM host",
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {}
              },
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/radar/stations/{stationId}": {
      "get": {
        "description": "Returns metadata about a given radar station",
        "operationId": "radar_station",
        "parameters": [
          {
            "description": "Show RDA and latency info from specific reporting host",
            "in": "query",
            "name": "reportingHost",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show latency info from specific LDM host",
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {}
              },
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Radar station ID",
          "in": "path",
          "name": "stationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/radar/stations/{stationId}/alarms": {
      "get": {
        "description": "Returns metadata about a given radar station alarms",
        "operationId": "radar_station_alarms",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Radar station ID",
          "in": "path",
          "name": "stationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/stations": {
      "get": {
        "description": "Returns a list of observation stations.",
        "operationId": "obs_stations",
        "parameters": [
          {
            "description": "Filter by observation station ID",
            "explode": false,
            "in": "query",
            "name": "id",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by state/marine area code",
            "explode": false,
            "in": "query",
            "name": "state",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/AreaCode"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/PaginationCursor"
          },
          {
            "$ref": "#/components/parameters/ObservationsStationFeatureFlags"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ObservationStationCollection"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}": {
      "get": {
        "description": "Returns metadata about a given observation station",
        "operationId": "obs_station",
        "parameters": [
          {
            "$ref": "#/components/parameters/ObservationsStationFeatureFlags"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationStationGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationStationJsonLd"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ObservationStationId"
        }
      ]
    },
    "/stations/{stationId}/observations": {
      "get": {
        "description": "Returns a list of observations for a given station",
        "operationId": "station_observation_list",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryStartTime"
          },
          {
            "$ref": "#/components/parameters/QueryEndTime"
          },
          {
            "description": "Limit",
            "in": "query",
            "name": "limit",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ObservationCollection"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ObservationStationId"
        }
      ]
    },
    "/stations/{stationId}/observations/{time}": {
      "get": {
        "description": "Returns a single observation.",
        "operationId": "station_observation_time",
        "parameters": [
          {
            "description": "Timestamp of requested observation",
            "in": "path",
            "name": "time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Observation"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ObservationStationId"
        }
      ]
    },
    "/stations/{stationId}/observations/latest": {
      "get": {
        "description": "Returns the latest observation for a station",
        "operationId": "station_observation_latest",
        "parameters": [
          {
            "description": "Require QC",
            "in": "query",
            "name": "require_qc",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Observation"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ObservationStationId"
        }
      ]
    },
    "/stations/{stationId}/tafs": {
      "get": {
        "description": "Returns Terminal Aerodrome Forecasts for the specified airport station.",
        "operationId": "tafs",
        "parameters": [
          {
            "$ref": "#/components/parameters/ObservationStationId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/ld+json": {
                "schema": {}
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}/tafs/{date}/{time}": {
      "get": {
        "description": "Returns a single Terminal Aerodrome Forecast.",
        "operationId": "taf",
        "parameters": [
          {
            "$ref": "#/components/parameters/ObservationStationId"
          },
          {
            "$ref": "#/components/parameters/Date"
          },
          {
            "$ref": "#/components/parameters/Time"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.wmo.iwxxm+xml": {
                "schema": {}
              }
            },
            "description": "success"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/thumbnails/satellite/{area}": {
      "get": {
        "deprecated": true,
        "description": "Returns a thumbnail image for a satellite region. Image services in API are deprecated.",
        "operationId": "satellite_thumbnails",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryFile"
                }
              }
            },
            "description": "An image file",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": ".",
          "in": "path",
          "name": "area",
          "required": true,
          "schema": {
            "enum": [
              "a",
              "e",
              "g",
              "h",
              "p",
              "s",
              "w"
            ],
            "type": "string"
          }
        }
      ]
    },
    "/zones": {
      "get": {
        "description": "Returns a list of zones",
        "operationId": "zone_list",
        "parameters": [
          {
            "description": "Zone ID (forecast or county)",
            "explode": false,
            "in": "query",
            "name": "id",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/NWSZoneID"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "State/marine area code",
            "explode": false,
            "in": "query",
            "name": "area",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/AreaCode"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Region code",
            "explode": false,
            "in": "query",
            "name": "region",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/RegionCode"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Zone type",
            "explode": false,
            "in": "query",
            "name": "type",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/NWSZoneType"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Point (latitude,longitude)",
            "in": "query",
            "name": "point",
            "schema": {
              "$ref": "#/components/schemas/PointString"
            }
          },
          {
            "description": "Include geometry in results (true/false)",
            "in": "query",
            "name": "include_geometry",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Limit",
            "in": "query",
            "name": "limit",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Effective date/time",
            "in": "query",
            "name": "effective",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneCollectionGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneCollectionJsonLd"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/zones/{type}": {
      "get": {
        "description": "Returns a list of zones of a given type",
        "operationId": "zone_list_type",
        "parameters": [
          {
            "description": "Zone ID (forecast or county)",
            "explode": false,
            "in": "query",
            "name": "id",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/NWSZoneID"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "State/marine area code",
            "explode": false,
            "in": "query",
            "name": "area",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/AreaCode"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Region code",
            "explode": false,
            "in": "query",
            "name": "region",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/RegionCode"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Zone type",
            "explode": false,
            "in": "query",
            "name": "type",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/NWSZoneType"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Point (latitude,longitude)",
            "in": "query",
            "name": "point",
            "schema": {
              "$ref": "#/components/schemas/PointString"
            }
          },
          {
            "description": "Include geometry in results (true/false)",
            "in": "query",
            "name": "include_geometry",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Limit",
            "in": "query",
            "name": "limit",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Effective date/time",
            "in": "query",
            "name": "effective",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneCollectionGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneCollectionJsonLd"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Zone type",
          "in": "path",
          "name": "type",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NWSZoneType"
          }
        }
      ]
    },
    "/zones/{type}/{zoneId}": {
      "get": {
        "description": "Returns metadata about a given zone",
        "operationId": "zone",
        "parameters": [
          {
            "description": "Effective date/time",
            "in": "query",
            "name": "effective",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneJsonLd"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Zone type",
          "in": "path",
          "name": "type",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NWSZoneType"
          }
        },
        {
          "$ref": "#/components/parameters/NWSZoneId"
        }
      ]
    },
    "/zones/{type}/{zoneId}/forecast": {
      "get": {
        "description": "Returns the current zone forecast for a given zone",
        "operationId": "zone_forecast",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneForecastGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneForecastJsonLd"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "description": "Zone type",
          "in": "path",
          "name": "type",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "$ref": "#/components/parameters/NWSZoneId"
        }
      ]
    },
    "/zones/forecast/{zoneId}/observations": {
      "get": {
        "description": "Returns a list of observations for a given zone",
        "operationId": "zone_obs",
        "parameters": [
          {
            "description": "Start date/time",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End date/time",
            "in": "query",
            "name": "end",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Limit",
            "in": "query",
            "name": "limit",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationCollectionGeoJson"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationCollectionJsonLd"
                }
              }
            },
            "description": "success",
            "headers": {
              "X-Correlation-Id": {
                "$ref": "#/components/headers/CorrelationId"
              },
              "X-Request-Id": {
                "$ref": "#/components/headers/RequestId"
              },
              "X-Server-Id": {
                "$ref": "#/components/headers/ServerId"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/NWSZoneId"
        }
      ]
    },
    "/zones/forecast/{zoneId}/stations": {
      "get": {
        "description": "Returns a list of observation stations for a given zone",
        "operationId": "zone_stations",
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ObservationStationCollection"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/NWSZoneId"
        },
        {
          "$ref": "#/components/parameters/Limit"
        },
        {
          "$ref": "#/components/parameters/PaginationCursor"
        },
        {
          "$ref": "#/components/parameters/ObservationsStationFeatureFlags"
        }
      ]
    }
  },
  "security": [
    {
      "userAgent": []
    }
  ],
  "servers": [
    {
      "description": "Production server",
      "url": "https://api.weather.gov"
    }
  ]
}